// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/task_manager/service/translate_service.go

// Package mocks is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	translate "github.com/oOSomnus/transflate/api/generated/translate"
)

// MockTranslateService is a mock of TranslateService interface.
type MockTranslateService struct {
	ctrl     *gomock.Controller
	recorder *MockTranslateServiceMockRecorder
}

// MockTranslateServiceMockRecorder is the mock recorder for MockTranslateService.
type MockTranslateServiceMockRecorder struct {
	mock *MockTranslateService
}

// NewMockTranslateService creates a new mock instance.
func NewMockTranslateService(ctrl *gomock.Controller) *MockTranslateService {
	mock := &MockTranslateService{ctrl: ctrl}
	mock.recorder = &MockTranslateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTranslateService) EXPECT() *MockTranslateServiceMockRecorder {
	return m.recorder
}

// CloseTransGrpcConn mocks base method.
func (m *MockTranslateService) CloseTransGrpcConn() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseTransGrpcConn")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseTransGrpcConn indicates an expected call of CloseTransGrpcConn.
func (mr *MockTranslateServiceMockRecorder) CloseTransGrpcConn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseTransGrpcConn", reflect.TypeOf((*MockTranslateService)(nil).CloseTransGrpcConn))
}

// TranslateText mocks base method.
func (m *MockTranslateService) TranslateText(text string) (*translate.TranslateResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TranslateText", text)
	ret0, _ := ret[0].(*translate.TranslateResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TranslateText indicates an expected call of TranslateText.
func (mr *MockTranslateServiceMockRecorder) TranslateText(text interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TranslateText", reflect.TypeOf((*MockTranslateService)(nil).TranslateText), text)
}
