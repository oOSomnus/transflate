// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/task_manager/service/s3_storage_service.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockS3StorageService is a mock of S3StorageService interface.
type MockS3StorageService struct {
	ctrl     *gomock.Controller
	recorder *MockS3StorageServiceMockRecorder
}

// MockS3StorageServiceMockRecorder is the mock recorder for MockS3StorageService.
type MockS3StorageServiceMockRecorder struct {
	mock *MockS3StorageService
}

// NewMockS3StorageService creates a new mock instance.
func NewMockS3StorageService(ctrl *gomock.Controller) *MockS3StorageService {
	mock := &MockS3StorageService{ctrl: ctrl}
	mock.recorder = &MockS3StorageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockS3StorageService) EXPECT() *MockS3StorageServiceMockRecorder {
	return m.recorder
}

// GeneratePresignedURL mocks base method.
func (m *MockS3StorageService) GeneratePresignedURL(bucketName, objectKey string, expiration time.Duration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeneratePresignedURL", bucketName, objectKey, expiration)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeneratePresignedURL indicates an expected call of GeneratePresignedURL.
func (mr *MockS3StorageServiceMockRecorder) GeneratePresignedURL(bucketName, objectKey, expiration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneratePresignedURL", reflect.TypeOf((*MockS3StorageService)(nil).GeneratePresignedURL), bucketName, objectKey, expiration)
}

// UploadFileToS3 mocks base method.
func (m *MockS3StorageService) UploadFileToS3(bucketName, objectKey, filePath string, expirationDays int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFileToS3", bucketName, objectKey, filePath, expirationDays)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadFileToS3 indicates an expected call of UploadFileToS3.
func (mr *MockS3StorageServiceMockRecorder) UploadFileToS3(bucketName, objectKey, filePath, expirationDays interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFileToS3", reflect.TypeOf((*MockS3StorageService)(nil).UploadFileToS3), bucketName, objectKey, filePath, expirationDays)
}
