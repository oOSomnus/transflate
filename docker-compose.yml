services:
  ocr_service:
    build:
      context: ./backend
      dockerfile: cmd/ocr_service/Dockerfile
    environment:
      TRANSFLATE_ENV: production
    depends_on:
      - postgres
    networks:
      - transflate

  task_manager:
    build:
      context: ./backend
      dockerfile: cmd/task_manager/Dockerfile
    environment:
      TRANSFLATE_ENV: production
    depends_on:
      - postgres
    networks:
      - transflate

  translate_service:
    build:
      context: ./backend
      dockerfile: cmd/translate_service/Dockerfile
    environment:
      TRANSFLATE_ENV: production
    depends_on:
      - postgres
    networks:
      - transflate

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - transflate
  
  redis:
    image: redis:7
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes" ]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - transflate

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    networks:
      - transflate

volumes:
  postgres_data:
  redis_data:

networks:
  transflate:
    name: transflate
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
